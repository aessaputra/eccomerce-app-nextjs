// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum RoleUser {
  superadmin customer
}

model User {
  id int @id @default(autoincrement())
  name String @db.VarChar(255)
  email String @unique @db.Varchar(255)
  password String @db.VarChar(255)
  role RoleUser @default(customer)

  orders Order[]

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt
}

model Brand {
  id int @id @default(autoincrement())
  name String @db.VarChar(255)
  logo string @db.VarChar(255)

  products Product[]

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}

model Category {
  id int @id @default(autoincrement())
  name String @db.VarChar(255)

  products Product[]

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}

model Location {
  id int @id @default(autoincrement())
  name String @db.VarChar(255)

  products Product[]

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}

enum ProductStock {
  ready
  preorder
}

model Product {
  id int @id @default(autoincrement())
  brand_id Brand @relation(field: [brand_id], references: [id])
  category_id Int
  category Category @relation(fields: [category_id], references: [id])
  location_id Int
  location Location @relation(fields: [location_id], references [id])
  name String @db.VarChar(255)
  description String @db.Text
  price BigInt @db.BigInt
  stock ProductStock
  images String[]

  orders OrderProduct[]

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}

enum Status Order {
  pending
  success
  failed
}

model Order {
  id int @id @default(autoincrement())

  code String @db.text @unique
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  total BigInt @db.BigInt
  status StatusOrder

  detail OrderDetail?
  products OrderProduct[]

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}

model OrderDetail {
  id int @id @default(autoincrement())
  
  order_id Int @unique
  order Order @relation(fields: [order_id], references: [id])
  name String @db.VarChar(255)
  phone String @db.VarChar(255)
  address String @db.VarChar(255)
  city String @db.VarChar(255)
  postal_code String @db.VarChar(255)
  notes String? @db.VarChar(255)

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}

model OrderProduct {
  id int @id @default(autoincrement())
  product_id Int
  product Product @relation(fields: [product_id], references: [id])
  order_id Int
  order Order @relation(fields: [order_id], references: [id])

  created_at Datetime @default(now())
  updated_at Datetime @updatedAt  
}